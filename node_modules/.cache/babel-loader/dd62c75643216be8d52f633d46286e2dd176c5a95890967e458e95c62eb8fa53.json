{"ast":null,"code":"var _jsxFileName = \"/Users/tanvichowdhury/Documents/PRoJeCTs/Meme Generator-React/my-app/src/components/Meme.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport memesData from \"../memesData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n  const [meme, setMeme] = React.useState({\n    topText: '',\n    bottomText: '',\n    memeImage: ''\n  });\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event;\n    setMeme(prevMeme => {\n      return {\n        ...prevMeme\n      };\n    });\n  }\n  const [allMemesImages, setAllMemesImage] = React.useState(memesData);\n  function getMemeImage() {\n    let memesArray = allMemesImages.data.memes;\n    let randomNum = Math.floor(Math.random() * memesArray.length);\n    // memesArray[randomNum].url;\n    setMeme(prevState => {\n      return {\n        ...prevState,\n        memeImage: memesArray[randomNum].url\n      };\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"meme-generator\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"topText\",\n        id: \"line-1\",\n        required: true,\n        minLength: 1,\n        placeholder: \"Top text\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"bottomText\",\n        id: \"line-2\",\n        required: true,\n        minLength: 1,\n        placeholder: \"Bottom text\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: getMemeImage,\n      children: \"Get a new meme image \\uD83D\\uDDBC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"memeImage\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme.memeImage,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text top\",\n        children: \"One does not simply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text bottom\",\n        children: \"Walk into Mordor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Meme, \"tCB+AOwuPYiI2ZCsqZ3QyvwbjlI=\");\n_c = Meme;\nvar _c;\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","memesData","jsxDEV","_jsxDEV","Meme","_s","meme","setMeme","useState","topText","bottomText","memeImage","handleChange","event","name","value","prevMeme","allMemesImages","setAllMemesImage","getMemeImage","memesArray","data","memes","randomNum","Math","floor","random","length","prevState","url","className","children","type","id","required","minLength","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/tanvichowdhury/Documents/PRoJeCTs/Meme Generator-React/my-app/src/components/Meme.js"],"sourcesContent":["import React from \"react\";\n\nimport memesData from \"../memesData\";\n\nexport default function Meme() {\n\n  const [meme, setMeme] = React.useState({\n    topText: '',\n    bottomText: '',\n    memeImage: '' \n  });\n\n  function handleChange(event) {\n    const {name, value} = event\n    setMeme(prevMeme => {\n      return{\n        ...prevMeme,\n      }\n    })\n  }\n\n  const [allMemesImages, setAllMemesImage] = React.useState(memesData);\n\n  function getMemeImage() {\n    let memesArray = allMemesImages.data.memes;\n    let randomNum = Math.floor(Math.random() * memesArray.length);\n    // memesArray[randomNum].url;\n    setMeme(prevState => {\n        return {\n            ...prevState,\n            memeImage: memesArray[randomNum].url\n        }\n    })\n  }\n\n  return (\n    <main className=\"meme-generator\">\n      <div className=\"inputs\">\n        <input\n          type=\"text\"\n          name=\"topText\"\n          id=\"line-1\"\n          required\n          minLength={1}\n          placeholder=\"Top text\"\n          onChange={handleChange}\n        />\n        <input\n          type=\"text\"\n          name=\"bottomText\"\n          id=\"line-2\"\n          required\n          minLength={1}\n          placeholder=\"Bottom text\"\n          onChange={handleChange}\n        />\n      </div>\n      <button type=\"submit\" onClick={getMemeImage}>\n        Get a new meme image ðŸ–¼\n      </button>\n      <div className=\"memeImage\">\n        <img src={meme.memeImage} alt=\"\" />\n        <h2 className=\"meme--text top\">One does not simply</h2>\n        <h2 className=\"meme--text bottom\">Walk into Mordor</h2>\n      </div>\n    </main>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}