{"ast":null,"code":"var _jsxFileName = \"/Users/tanvichowdhury/Documents/PRoJeCTs/Meme Generator-React/my-app/src/components/Meme.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport memesData from \"../memesData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n  let url;\n  function getMemeImage() {\n    let memesArray = memesData.data.memes;\n    let randomNum = Math.floor(Math.random() * memesArray.length);\n    url = memesArray[randomNum].url;\n  }\n  const [urlLink, setUrlLink] = React.useState(url);\n  console.log();\n\n  //   function memeImage() {\n  //     setUrlLink(prevState => prevState = url)\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"meme-generator\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"line-1\",\n        id: \"line-1\",\n        required: true,\n        minLength: 1,\n        placeholder: \"Top text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"line-2\",\n        id: \"line-2\",\n        required: true,\n        minLength: 1,\n        placeholder: \"Bottom text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: getMemeImage,\n      children: \"Get a new meme image \\uD83D\\uDDBC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: urlLink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(Meme, \"NS3DFP5vNybIETP+t/lTY6x+hXs=\");\n_c = Meme;\nvar _c;\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","memesData","jsxDEV","_jsxDEV","Meme","_s","url","getMemeImage","memesArray","data","memes","randomNum","Math","floor","random","length","urlLink","setUrlLink","useState","console","log","className","children","type","name","id","required","minLength","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","_c","$RefreshReg$"],"sources":["/Users/tanvichowdhury/Documents/PRoJeCTs/Meme Generator-React/my-app/src/components/Meme.js"],"sourcesContent":["import React from \"react\";\n\nimport memesData from \"../memesData\";\n\nexport default function Meme() {\n\n  let url;\n  function getMemeImage() {\n    let memesArray = memesData.data.memes;\n    let randomNum = Math.floor(Math.random() * memesArray.length);\n    url = memesArray[randomNum].url;\n  }\n  const [urlLink, setUrlLink] = React.useState(url);\n  console.log()\n\n//   function memeImage() {\n//     setUrlLink(prevState => prevState = url)\n//   }\n\n  return (\n    <main className=\"meme-generator\">\n      <div className=\"inputs\">\n        <input\n          type=\"text\"\n          name=\"line-1\"\n          id=\"line-1\"\n          required\n          minLength={1}\n          placeholder=\"Top text\"\n        />\n        <input\n          type=\"text\"\n          name=\"line-2\"\n          id=\"line-2\"\n          required\n          minLength={1}\n          placeholder=\"Bottom text\"\n        />\n      </div>\n      <button type=\"submit\" onClick={getMemeImage}>\n        Get a new meme image ðŸ–¼\n      </button>\n      <div>\n        <img src={urlLink} />\n      </div>\n    </main>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,SAAS,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAE7B,IAAIC,GAAG;EACP,SAASC,YAAYA,CAAA,EAAG;IACtB,IAAIC,UAAU,GAAGP,SAAS,CAACQ,IAAI,CAACC,KAAK;IACrC,IAAIC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGN,UAAU,CAACO,MAAM,CAAC;IAC7DT,GAAG,GAAGE,UAAU,CAACG,SAAS,CAAC,CAACL,GAAG;EACjC;EACA,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGjB,KAAK,CAACkB,QAAQ,CAACZ,GAAG,CAAC;EACjDa,OAAO,CAACC,GAAG,CAAC,CAAC;;EAEf;EACA;EACA;;EAEE,oBACEjB,OAAA;IAAMkB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC9BnB,OAAA;MAAKkB,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBnB,OAAA;QACEoB,IAAI,EAAC,MAAM;QACXC,IAAI,EAAC,QAAQ;QACbC,EAAE,EAAC,QAAQ;QACXC,QAAQ;QACRC,SAAS,EAAE,CAAE;QACbC,WAAW,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,eACF7B,OAAA;QACEoB,IAAI,EAAC,MAAM;QACXC,IAAI,EAAC,QAAQ;QACbC,EAAE,EAAC,QAAQ;QACXC,QAAQ;QACRC,SAAS,EAAE,CAAE;QACbC,WAAW,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN7B,OAAA;MAAQoB,IAAI,EAAC,QAAQ;MAACU,OAAO,EAAE1B,YAAa;MAAAe,QAAA,EAAC;IAE7C;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT7B,OAAA;MAAAmB,QAAA,eACEnB,OAAA;QAAK+B,GAAG,EAAElB;MAAQ;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX;AAAC3B,EAAA,CA3CuBD,IAAI;AAAA+B,EAAA,GAAJ/B,IAAI;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}